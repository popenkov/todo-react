{"version":3,"sources":["components/Layout/Layout.module.css","components/TodoForm/TodoForm.module.css","components/Header/Header.module.css","components/Sidebar/Sidebar.module.css","components/FilterList/FilterList.module.css","components/LinkList/LinkList.module.css","components/Main/Main.module.css","components/Counter/Counter.module.css","components/Todo/Todo.module.css","components/Header/Header.tsx","components/LinkItem/LinkItem.jsx","components/FilterList/FilterList.tsx","components/LinkList/LinkList.jsx","components/ErrorBoundary/ErrorBoundary.js","components/Sidebar/Sidebar.tsx","components/Counter/Counter1.tsx","components/Counter/isFive.tsx","components/Counter/Counter2.tsx","components/Counter/Counter.tsx","components/TodoForm/TodoForm.tsx","components/TodoListItem/TodoListItem.tsx","components/TodoList/TodoList.tsx","components/Todo/Todo.tsx","components/Main/Main.tsx","components/Layout/Layout.jsx","App.tsx","reportWebVitals.js","index.js"],"names":["module","exports","Header","className","cn","style","header","LinkItem","props","href","value","FilterList","filterInputHandler","inputRef","useRef","ref","onInput","e","current","border","filterList","LinkList","todo","useContext","ToDoContext","useState","thingsToDo","setThingsToDo","evt","todoCopy","slice","target","Error","filteredArray","filter","item","includes","map","link","id","ErrorBoundary","state","error","errorInfo","this","setState","whiteSpace","toString","componentStack","children","Component","Sidebar","sidebar","renderCount","Counter1","number1","setNumber1","console","log","onClick","IsFive","React","memo","rightAmount","useMemo","num","i","setRightAmount","prevProps","nextProps","Counter2","number2","setNumber2","Counter","counter","TodoForm","addTodo","newTodo","setNewTodo","todoForm","type","todoInput","placeholder","onChange","todoBtn","preventDefault","TodoListItem","toggleComplete","complete","checked","text","TodoList","todos","Todo","setTodos","selectedTodo","updatedTodos","Main","main","Layout","layout","createContext","App","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fea9a07a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__3Z07R\",\"header\":\"Layout_header__3AZAL\",\"main\":\"Layout_main__iNxPr\",\"sidebar\":\"Layout_sidebar__3v8Fy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoForm\":\"TodoForm_todoForm__bhzAj\",\"todoBtn\":\"TodoForm_todoBtn__DphhO\",\"todoInput\":\"TodoForm_todoInput__3-nLu\",\"edit\":\"TodoForm_edit__15r7x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3zmyG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__MzECe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterList\":\"FilterList_filterList__2P-PC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LinkList\":\"LinkList_LinkList__24L2B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__rxHqR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"Counter_counter__1Zy4j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"Todo_todo__1-Sy7\"};","import style from \"./Header.module.css\";\r\nimport cn from \"classnames\";\r\nimport {FunctionComponent} from \"react\";\r\n\r\ninterface HeaderInterface {\r\n    className: string;\r\n}\r\n\r\nconst Header: FunctionComponent<HeaderInterface> = ({className}) => {\r\n  return (\r\n    <header className={cn(className, style.header)}>\r\n      <h1>Header</h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const LinkItem = (props) => {\r\n  return (\r\n    <li>\r\n      <a href=\"#\">{props.value}</a>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default LinkItem;\r\n","import style from \"./FilterList.module.css\";\r\nimport {FC, useRef} from \"react\";\r\n\r\ninterface FilterListProps {\r\n  filterInputHandler: (e: any) => void;\r\n}\r\n\r\n\r\nconst FilterList: FC<FilterListProps> = ({filterInputHandler}): JSX.Element => {\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n    const handleFocus = () => {\r\n        if (inputRef.current !== null) {\r\n            inputRef.current.style.border = '1 px solid red'\r\n        }\r\n\r\n    }\r\n  return (\r\n    <input\r\n        ref={inputRef}\r\n    onInput={(e) => {\r\n        handleFocus()\r\n      filterInputHandler(e);\r\n    }}\r\n    className={style.filterList}\r\n    />\r\n  );\r\n};\r\n\r\nexport default FilterList;\r\n","import LinkItem from \"../LinkItem/LinkItem\";\r\nimport FilterList from \"../FilterList/FilterList\";\r\nimport { useContext, useState } from \"react\";\r\nimport { ToDoContext } from \"../../App\";\r\nimport style from \"./LinkList.module.css\";\r\nconst LinkList = () => {\r\n  const { todo } = useContext(ToDoContext);\r\n  const [thingsToDo, setThingsToDo] = useState(todo);\r\n\r\n  function filterInputHandler(evt) {\r\n    const todoCopy = todo.slice();\r\n    if (evt.target.value === \"bomb\") {\r\n      throw new Error(\"Caboom\");\r\n    }\r\n    const filteredArray = todoCopy.filter((item) => {\r\n      return item.includes(evt.target.value);\r\n    });\r\n    setThingsToDo(filteredArray);\r\n  }\r\n  return (\r\n    <>\r\n      <FilterList filterInputHandler={filterInputHandler} />\r\n      <ul className={style.LinkList}>\r\n        {thingsToDo.map((link, id) => {\r\n          return <LinkItem key={id} value={link} />;\r\n        })}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LinkList;\r\n","import React from \"react\";\r\nimport {Component} from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { error: null, errorInfo: null };\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        // Catch errors in any components below and re-render with error message\r\n        this.setState({\r\n            error: error,\r\n            errorInfo: errorInfo\r\n        })\r\n        // You can also log error messages to an error reporting service here\r\n    }\r\n\r\n    render() {\r\n        if (this.state.errorInfo) {\r\n            // Error path\r\n            return (\r\n                <div>\r\n                    <h2>Something went wrong.</h2>\r\n                    <details style={{ whiteSpace: 'pre-wrap' }}>\r\n                        {this.state.error && this.state.error.toString()}\r\n                        <br />\r\n                        {this.state.errorInfo.componentStack}\r\n                    </details>\r\n                </div>\r\n            );\r\n        }\r\n        // Normally, just render children\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import style from \"./Sidebar.module.css\";\r\nimport cn from \"classnames\";\r\nimport LinkList from \"../LinkList/LinkList\";\r\nimport {FC} from \"react\";\r\nimport ErrorBoundary from \"../ErrorBoundary/ErrorBoundary\";\r\ninterface SidebarInterface {\r\n    className: string;\r\n}\r\nconst Sidebar: FC<SidebarInterface> = (props) => {\r\n  return (\r\n    <div className={cn(props.className, style.sidebar)}>\r\n      <h1>Sidebar</h1>\r\n    <ErrorBoundary>\r\n      <LinkList />\r\n    </ErrorBoundary>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import { useState, FC } from \"react\";\r\nlet renderCount = 0;\r\nconst Counter1: FC = () => {\r\n  const [number1, setNumber1] = useState(0);\r\n\r\n  console.log(\"Counter 1 rerendered:\", ++renderCount);\r\n\r\n  return (\r\n    <div id=\"counter1\">\r\n      <p>{number1}</p>\r\n      <button\r\n        onClick={() => {\r\n          setNumber1(number1 + 1);\r\n        }}\r\n      >\r\n        +\r\n      </button>\r\n      <button\r\n        onClick={() => {\r\n          setNumber1(number1 - 1);\r\n        }}\r\n      >\r\n        -\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Counter1;\r\n","import React from \"react\";\r\nimport { useMemo, FC } from \"react\";\r\nlet renderCount = 0;\r\n\r\ninterface IsFiveInterface {\r\n  value: number;\r\n}\r\nconst IsFive: FC<IsFiveInterface> = React.memo(\r\n  (props) => {\r\n    const setRightAmount = (num: number): string => {\r\n      let i = 0;\r\n      while (i < 600000000) i++;\r\n      return num === 5 ? \"This is 5\" : \"This is not 5\";\r\n    };\r\n\r\n    const rightAmount = useMemo(\r\n      () => setRightAmount(props.value),\r\n      [props.value]\r\n    );\r\n\r\n    console.log(\"IsFive rerendered:\", ++renderCount);\r\n\r\n    return <span>{rightAmount}</span>;\r\n  },\r\n  (prevProps, nextProps) => {\r\n    if (nextProps.value === 5) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n);\r\n\r\nexport default IsFive;\r\n","import { useState, useMemo, FC } from \"react\";\r\nimport IsFive from \"./isFive\";\r\nlet renderCount = 0;\r\nconst Counter2: FC = () => {\r\n  const [number2, setNumber2] = useState(0);\r\n\r\n  const setRightAmount = (num: number): string => {\r\n    let i = 0;\r\n    while (i < 600000000) i++;\r\n    return num === 5 ? \"This is 5\" : \"This is not 5\";\r\n  };\r\n\r\n  const rightAmount = useMemo(() => setRightAmount(number2), [number2]);\r\n\r\n  console.log(\"Counter 2 rerendered:\", ++renderCount);\r\n\r\n  return (\r\n    <>\r\n      <div id=\"counter2\">\r\n        <p>\r\n          {number2} - <IsFive value={number2} />\r\n        </p>\r\n        <button\r\n          onClick={() => {\r\n            setNumber2(number2 + 1);\r\n          }}\r\n        >\r\n          +\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            setNumber2(number2 - 1);\r\n          }}\r\n        >\r\n          -\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Counter2;\r\n","import { FC } from \"react\";\r\nimport Counter1 from \"./Counter1\";\r\nimport Counter2 from \"./Counter2\";\r\nimport style from \"./Counter.module.css\";\r\n\r\nconst Counter: FC = () => {\r\n  /*   const [number1, setNumber1] = useState(0);\r\n  const [number2, setNumber2] = useState(0);\r\n\r\n  const setRightAmount = (num: number): string => {\r\n    let i = 0;\r\n    while (i < 600000000) i++;\r\n    return num === 5 ? \"This is 5\" : \"This is not 5\";\r\n  }; */\r\n\r\n  /*   const rightAmount = useMemo(() => setRightAmount(number2), [number2]); */\r\n  console.log(\"Counter main rerendered\");\r\n  return (\r\n    <section className={style.counter}>\r\n      <Counter1 />\r\n      <Counter2 />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import { useState, ChangeEvent, FormEvent, FC } from \"react\";\r\nimport style from \"./TodoForm.module.css\";\r\n\r\ninterface TodoFormProps {\r\n  addTodo: AddTodo;\r\n}\r\n\r\nexport const TodoForm: FC<TodoFormProps> = ({ addTodo }) => {\r\n  const [newTodo, setNewTodo] = useState<string>(\"\");\r\n\r\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setNewTodo(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e: FormEvent<HTMLButtonElement>) => {\r\n    e.preventDefault();\r\n    addTodo(newTodo);\r\n    setNewTodo(\"\");\r\n  };\r\n\r\n  return (\r\n    <form className={style.todoForm}>\r\n      <input\r\n        type=\"text\"\r\n        value={newTodo}\r\n        className={style.todoInput}\r\n        placeholder=\"Add a todo\"\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\" className={style.todoBtn} onClick={handleSubmit}>\r\n        Add Todo\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\n\r\ninterface TodoListItemProps {\r\n  todo: Todo;\r\n  toggleComplete: ToggleComplete;\r\n}\r\n\r\nexport const TodoListItem: FC<TodoListItemProps> = ({\r\n  todo,\r\n  toggleComplete,\r\n}) => {\r\n  return (\r\n    <li>\r\n      <label className={todo.complete ? \"todo-row completed\" : \"todo-row\"}>\r\n        <input\r\n          type=\"checkbox\"\r\n          onChange={() => toggleComplete(todo)}\r\n          checked={todo.complete}\r\n        />\r\n        {todo.text}\r\n      </label>\r\n    </li>\r\n  );\r\n};\r\n","import { FC } from \"react\";\r\nimport { TodoListItem } from \"../TodoListItem/TodoListItem\";\r\n\r\ninterface TodoListProps {\r\n  todos: Array<Todo>;\r\n  toggleComplete: ToggleComplete;\r\n}\r\n\r\nexport const TodoList: FC<TodoListProps> = ({ todos, toggleComplete }) => {\r\n  return (\r\n    <ul>\r\n      {todos.map((todo) => (\r\n        <TodoListItem\r\n          key={todo.text}\r\n          todo={todo}\r\n          toggleComplete={toggleComplete}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\nimport { TodoForm } from \"../TodoForm/TodoForm\";\r\nimport { TodoList } from \"../TodoList/TodoList\";\r\nimport style from \"./Todo.module.css\";\r\n\r\nfunction Todo() {\r\n  const [todos, setTodos] = useState<Array<Todo>>([]);\r\n\r\n  const toggleComplete: ToggleComplete = (selectedTodo) => {\r\n    const updatedTodos = todos.map((todo) => {\r\n      if (todo === selectedTodo) {\r\n        return { ...todo, complete: !todo.complete };\r\n      }\r\n      return todo;\r\n    });\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  const addTodo: AddTodo = (newTodo) => {\r\n    if (newTodo !== \"\") {\r\n      setTodos([...todos, { text: newTodo, complete: false }]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={style.todo}>\r\n      <header>\r\n        <h1>Todo</h1>\r\n      </header>\r\n      <TodoForm addTodo={addTodo} />\r\n      <TodoList todos={todos} toggleComplete={toggleComplete} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","import style from \"./Main.module.css\";\r\nimport cn from \"classnames\";\r\nimport { FC } from \"react\";\r\nimport Counter from \"../Counter/Counter\";\r\nimport Todo from \"../Todo/Todo\";\r\n\r\ninterface MainInterface {\r\n  className: string;\r\n}\r\n\r\nconst Main: FC<MainInterface> = (props) => {\r\n  return (\r\n    <div className={cn(props.className, style.main)}>\r\n      <h1>Main</h1>\r\n      <Counter />\r\n      <Todo />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import Header from \"../Header/Header.tsx\";\r\nimport Sidebar from \"../Sidebar/Sidebar.tsx\";\r\nimport Main from \"../Main/Main.tsx\";\r\nimport style from \"./Layout.module.css\";\r\nconst Layout = () => {\r\n  return (\r\n    <div className={style.layout}>\r\n      <Header className={style.header} />\r\n\r\n      <Sidebar className={style.sidebar} />\r\n      <Main className={style.main} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import \"./App.css\";\nimport Layout from \"./components/Layout/Layout\";\nimport { createContext } from \"react\";\n\nconst todo = [\"выучить реакт\", \"поесть\"];\n\nexport interface IToDoContext {\n  todo: string[];\n}\n\nexport const ToDoContext = createContext<IToDoContext>({ todo });\n\nfunction App(): JSX.Element {\n  return (\n    <ToDoContext.Provider value={{ todo: todo }}>\n\n            <Layout></Layout>\n\n    </ToDoContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <App />,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}